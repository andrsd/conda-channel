{% set version = "5.4.1" %}
{% set build = 0 %}

package:
  name: mumps
  version: {{ version }}

source:
  url: http://coin-or-tools.github.io/ThirdParty-Mumps/MUMPS_{{ version }}.tar.gz
  sha256: 93034a1a9fe0876307136dcde7e98e9086e199de76f1c47da822e7d4de987fa8
  patches:
    - files/0001-Create-static-and-shared-versions-of-the-PORD-librar.patch
    - files/0002-Create-a-shared-version-of-the-MUMPS-library.patch
    - files/0003-Create-a-shared-version-of-the-sequential-library-MU.patch
    - files/0004-These-now-need-to-link-with-the-relevant-Fortran-or-.patch
    - files/0005-flang-support.patch

build:
  number: 1
  script:
    - ${RECIPE_DIR}/build-mpi.sh
    - ${RECIPE_DIR}/build-headers.sh
  skip: true  # [win and vc<14]
  {% set mpi_prefix = "mpi_" + mpi %}
  string: {{ mpi_prefix }}_h{{ PKG_HASH }}_{{ build }}

  {% set build_pin = '' %}

requirements:
  build:
    - {{ compiler('fortran') }}
    - {{ compiler('c') }}
    - m2-patch  # [win]
    - make  # [unix]
    - {{ mpi }}  # [mpi == 'openmpi' and build_platform != target_platform]
  host:
    - libblas
    - liblapack
    - {{ mpi }}
    - metis 5.1.*
    - parmetis 4.0.* mpi_{{ mpi }}_*
    - ptscotch 6.0.*
    - scalapack 2.2.* mpi_{{ mpi }}_*
    - scotch 6.0.*
  run:
    - {{ mpi }}
    - metis 5.1.*
    - parmetis 4.0.* mpi_{{ mpi }}_*
    - ptscotch 6.0.*
    - scalapack 2.2.* mpi_{{ mpi }}_*
    - scotch 6.0.*

test:
  commands:
    {% for lib in [
      'smumps',
      'dmumps',
      'cmumps',
      'zmumps',
      'mumps_common',
      'pord',
    ] %}
    - test -f "${PREFIX}/lib/lib{{ lib }}-{{ version }}${SHLIB_EXT}"
    - test -h "${PREFIX}/lib/lib{{ lib }}${SHLIB_EXT}"
    - test -f "${PREFIX}/lib/lib{{ lib }}${SHLIB_EXT}"
    {% endfor %}
    - test -f "${PREFIX}/include/mumps_compat.h"

about:
  home: http://mumps.enseeiht.fr/
  license: CECILL-C
  license_file: LICENSE
  summary: 'MUMPS: a parallel sparse direct solver'
  description: |
    MUMPS (MUltifrontal Massively Parallel Solver) is a package for solving
    systems of linear equations of the form Ax = b, where A is a square sparse
    matrix that can be either unsymmetric, symmetric positive definite, or
    general symmetric, on distributed memory computers. MUMPS implements a
    direct method based on a multifrontal approach which performs a Gaussian
    factorization.
  doc_url: http://mumps.enseeiht.fr/index.php?page=doc

extra:
  recipe-maintainers:
    - andrsd

{% set name = "addr2line-rust" %}
{% set version = "0.25.0" %}
{% set build = 0 %}

package:
  name: {{ name | lower }}
  version: {{ version }}

source:
  url: https://github.com/gimli-rs/addr2line/archive/refs/tags/{{ version }}.tar.gz
  sha256: e793ca2e8a2496f3a05d04a08e86281b8aacb90bbaa29fbe4a1b664bb72e4bd5

build:
  number: {{ build }}
  script_env:
    CARGO_PROFILE_RELEASE_STRIP: symbols
    CARGO_PROFILE_RELEASE_LTO: fat
  script:
    - cargo auditable install --features bin --locked --no-track --bins --root {{ PREFIX }} --path .
    - cargo-bundle-licenses --format yaml --output ./THIRDPARTY.yml

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('rust') }}
    - cargo-bundle-licenses
    - cargo-auditable

tests:
  imports:
    - subprocess
  commands:
    - python -c "result = subprocess.run(['addr2line', '--help'], capture_output=True, text=True, check=True); assert 'Rust port' in result.stdout, \"'Rust port' not found in help output, this probably means it uses the binutils version\"'
  requires:
    - python

about:
  homepage: https://github.com/gimli-rs/addr2line
  summary: addr2line provides a cross-platform library for retrieving per-address debug information from files with DWARF debug information.
  description: |
    addr2line provides a cross-platform library for retrieving per-address debug information from files with DWARF debug information.
    Given an address, it can return the file name, line number, and function name associated with that address, as well as the
    inline call stack leading to that address.
  license: MIT OR Apache-2.0
  license_file:
    - LICENSE-APACHE
    - LICENSE-MIT
    - THIRDPARTY.yml
  repository: https://github.com/gimli-rs/addr2line

extra:
  recipe-maintainers:
    - andrsd
